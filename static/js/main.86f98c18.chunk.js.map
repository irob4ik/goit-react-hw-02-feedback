{"version":3,"sources":["components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Feedback/Feedback.js","App.js","index.js","components/Feedback/feedback.module.css","container.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","defaultProps","Section","title","children","Notification","message","Feedback","options","onLeaveFeedback","map","option","type","className","styles","feedBtn","onClick","App","state","increaseValue","value","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","totalFeedback","percentage","container","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2OAGMA,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,qCACI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,SAKnCL,EAAWM,aAAe,CACtBD,mBAAoB,eAWTL,QCxBTO,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,qCACI,6BAAKD,IACJC,MAKbF,EAAQD,aAAe,CACnBE,MAAO,gBAQID,QClBTG,EAAe,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACjB,4BAAIA,KAGRD,EAAaJ,aAAe,CACxBK,QAAS,qBAOED,Q,gBCMAE,EAfE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzB,OACI,mCACKD,EAAQE,KAAI,SAACC,GAAD,OACT,wBAAQC,KAAK,SAASC,UAAWC,IAAOC,QAAsBC,QAAS,kBAAMP,EAAgBE,IAA7F,SAAuGA,GAAjDA,S,gBCoDvDM,E,4MApDbC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPqB,cAAgB,SAAAC,GACd,EAAKC,UAAS,SAAAC,GAAS,sBAClBF,EAAQE,EAAWF,GAAS,O,EAKnCG,mBAAqB,WACnB,MAA+B,EAAKL,MACpC,OADA,EAAQtB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzB0B,gCAAkC,WAChC,MAA+B,EAAKN,MAA5BtB,EAAR,EAAQA,KAER,OAD6BA,GAAQA,EADrC,EAAcC,QAAd,EAAuBC,KACqC,KAAK2B,QAAQ,GAAK,K,4CAIhF,WACE,MAA+BC,KAAKR,MAA5BtB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB6B,EAAgBD,KAAKH,qBACrBK,EAAaF,KAAKF,kCAExB,OACE,sBAAKX,UAAWC,IAAOe,UAAvB,UACE,cAAC,EAAD,CAAS1B,MAAM,wBAAf,SAEE,cAAC,EAAD,CAAiBK,QAASsB,OAAOC,KAAKL,KAAKR,OAAQT,gBAAiBiB,KAAKP,kBAG3E,cAAC,EAAD,CAAShB,MAAM,aAAf,SACqB,IAAlBwB,EACC,cAAC,EAAD,CAAcrB,QAAQ,sBACtB,cAAC,EAAD,CACEV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO4B,EACP3B,mBAAoB4B,a,GA7ChBI,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,QAAU,4B,kBCA5BD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.86f98c18.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <>\r\n            <p>Good: {good}</p>\r\n            <p>Neutral: {neutral}</p>\r\n            <p>Bad: {bad}</p>\r\n            <p>Total: {total}</p>\r\n            <p>Positive feedback: {positivePercentage}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n    positivePercentage: 'uncountable',\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.string,\r\n}\r\n    \r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <>\r\n            <h1>{title}</h1>\r\n            {children}\r\n        </>\r\n    );\r\n}\r\n\r\nSection.defaultProps = {\r\n    title: \"Librakalibra\",\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node.isRequired,\r\n}\r\n    \r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({message}) => (\r\n    <p>{message}</p>\r\n);\r\n\r\nNotification.defaultProps = {\r\n    message: 'No feedback given',\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './feedback.module.css'\r\n\r\n\r\nconst Feedback = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <>\r\n            {options.map((option) => (\r\n                <button type=\"button\" className={styles.feedBtn} key={option} onClick={() => onLeaveFeedback(option)}>{option}</button>\r\n           ))} \r\n        </>\r\n    )\r\n};\r\n\r\nFeedback.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Feedback;","import React, { Component } from 'react';\n\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\nimport FeedbackOptions from './components/Feedback';\n\nimport styles from './container.module.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n  \n  increaseValue = value => {    \n    this.setState(prevState => ({\n        [value]: prevState.[value] + 1,\n      }\n      ))\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const positivePercentage = ((good / (good + neutral + bad))*100).toFixed(0) + \"%\";\n    return positivePercentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const percentage = this.countPositiveFeedbackPercentage();\n    \n    return (\n      <div className={styles.container}>\n        <Section title=\"Please leave feedback\">\n\n          <FeedbackOptions options={Object.keys(this.state)} onLeaveFeedback={this.increaseValue}/>\n        </Section>\n\n        <Section title=\"Statistics\">\n          {totalFeedback === 0 ?\n            <Notification message=\"No feedback given\" /> :            \n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positivePercentage={percentage}\n            />\n          }             \n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedBtn\":\"feedback_feedBtn__ohazu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__2CjMO\"};"],"sourceRoot":""}